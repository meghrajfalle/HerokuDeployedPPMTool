{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.jsx","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/ErrorComponent.js","components/TokenExpiredPage.js","components/Layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","created_At","updated_At","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","console","log","classnames","placeholder","UpdateProject","match","params","getProject","updateProject","disabled","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","intialState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_props","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","username","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","getProjectTask","updateProjectTask","classNames","patch","Landing","Register","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","ErrorComponent","TokenExpiredPage","Footer","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3509877.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      //so that validation errors of the AddProject don't remain\n      //  in memory when we goto Dashboard and see them when again when we click on updateProject\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\nexport const GET_BACKLOG = \"GET_BACKLOG\"; // This is nothing but get list of project task in that projectid\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props; // ES6 object destructuring —> to extract object properties and store them in variable\n    //project prop we are getting from parent element <Dashboard> which itself gets props when mounting intially.\n    return (\n      // <!-- Project Item Component -->\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      //  <!-- End of Project Item Component -->\n    );\n  }\n}\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProject })(ProjectItem); // null because are not mapping any  state to prop\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      {/*This React.Fragment wraps below code under one parent and will not shown in the html rendering as like div */}\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n  render() {\n    const { projects } = this.props.project; // ES6 object destructuring —> to extract object properties and store them in variable\n    // Here we are getting the project list\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false); // This will delete the token from authorization header\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      created_At: \"\",\n      updated_At: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  // not react may call this event if props  have not changed\n  // when we have errors this will be called\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n      created_At: this.state.created_At,\n      updated_At: this.state.updated_At\n    };\n    this.props.createProject(newProject, this.props.history);\n    console.log(newProject);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        {\n          //check name attribute input fields\n          //check constructor\n          //set value on input fields\n          //set state\n          //create onChange Function\n          //set onChange Function on each input Field\n          //bind on constructor\n          //check state change in react extension\n          // give the form an action so that onSubmit it calls a function\n          //onSubmit function which create an Project Object which will be passed for API call\n          //onSubmit we don't want to refresh the data and prevent the form from reloading\n          //bind the the onSubmit\n        }\n\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">\n                  Create / Edit Project form\n                </h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg \", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.setState.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.setState.projectIdentifier}\n                      onChange={this.onChange}\n                      //disabled\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  {/*<!-- disabled for Edit Only!! remove \"disabled\" for the Create operation -->*/}\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.setState.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.setState.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.setState.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params; // ES6 Destructuring\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state; // to get the errors object to access it in the below html code\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    disabled\n                  />\n                </div>\n                {/*<!-- disabled for Edit Only!! remove \"disabled\" for the Create operation -->*/}\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    value={this.state.description}\n                    name=\"description\"\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload), //returns true if payload is present\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst intialState = {};\nconst middleware = [thunk];\n\nlet store;\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  // if the browser is chrome and react devtools are present then we load the store with the react dev tools\n  //else open it with the middleware.\n  store = createStore(\n    rootReducer,\n    intialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    intialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      // {/**<!-- SAMPLE PROJECT TASK STARTS HERE --> */}\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n      // {/**<!-- SAMPLE PROJECT TASK ENDS HERE --> */});\n    );\n  }\n}\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      // this is required to remove whatever validations error you might have had before submitting the form clear it from the redux store state\n      type: GET_ERRORS, // so that when we open the same form for updation we don't still see the same validation errors\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_props } = this.props;\n\n    const tasks = project_tasks_props.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      // console.log(tasks[i]);\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              //insert  tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n            {/**<!-- SAMPLE PROJECT TASK STARTS HERE --> */\n            /**<!-- SAMPLE PROJECT TASK ENDS HERE --> */}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n            {/** <!-- SAMPLE PROJECT TASK STARTS HERE -->\n\n                      <!-- SAMPLE PROJECT TASK ENDS HERE -->*/}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id); //call to the API\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (errors.username === \"Invalid Username\") {\n        window.location.href = \"/\";\n      } else {\n        if (project_tasks.length < 1) {\n          if (errors.projectNotFound) {\n            return (\n              <div className=\"alert alert-danger text-center\" role=\"alert\">\n                {errors.projectNotFound}\n              </div>\n            );\n          } else if (errors.projectIdentifier) {\n            return (\n              <div className=\"alert alert-danger text-center\" role=\"alert\">\n                {errors.projectIdentifier}\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"alert alert-info text-center\" role=\"alert\">\n                No Project Tasks on this board\n              </div>\n            );\n          }\n        } else {\n          return <Backlog project_tasks_props={project_tasks} />;\n        }\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  //If a mapStateToProps function is specified, the new wrapper component will subscribe to Redux store updates.\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\"; //for validation\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //lifecycle hooks called when new props received into the current component, in our case error will be recieved, if validation fails\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    console.log(newProjectTask);\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n  }\n  render() {\n    const { id } = this.props.match.params; //DESTRUCTURING\n    const { errors } = this.state; // DESTRUCTURING bring the errors out of the state so that we can use it in render function\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.value}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  errors: state.errors // this is mapping state from redux to component state\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport classNames from \"classnames\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      created_At: \"2\",\n      updated_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params; // ES6 Destructuring\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //Called when the component may be receiving new props. For example, when the backlog action provides the response\n    // React may call this even if props have not changed, so be sure to compare new and existing props if you only want to handle changes.\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At,\n      updated_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      created_At,\n      updated_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      created_At: this.state.created_At,\n      updated_At: this.state.updated_At\n    };\n\n    //console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name:{this.state.projectIdentifier} + Project Code:\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary} </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task, //this will map the data from redux state of reducer backlog and in that project_task where we stored the payload of action\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Managment Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start you own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link\n                  className=\"btn btn-lg btn-success btn-secondary mr-2\"\n                  to=\"/login\"\n                >\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address(Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      // so if the value of security.validToken = true from our state then move to dashboard\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security, // this is present in the index.js\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\n\nclass ErrorComponent extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\n          An Error Occurred. The URL seems to be non existing!! <br />\n          Contact Support support@projectmanagmenttool.com\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ErrorComponent;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class TokenExpiredPage extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\n          Session Timedout. Your Token is Expired. Please login again!\n          <br />\n        </div>\n        <hr />\n        <Link className=\"btn btn-lg btn-success btn-secondary mr-2\" to=\"/login\">\n          Login\n        </Link>\n        <br /> Or <br />\n        <div className=\"alert alert-info text-center\" role=\"alert\">\n          Goto Landing Page\n          <br />\n        </div>\n        <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/\">\n          Home\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <span className=\"footer-text\">\n          All Right Reserved 2020 @meghrajdeveloper\n        </span>\n      </footer>\n    );\n  }\n}\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport { Provider } from \"react-redux\";\n// this is a part that allows us to hook up react with redux\n//the provider is basically how we define our store that we're going to use for our application\nimport store from \"./store\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport ErrorComponent from \"./components/ErrorComponent\";\nimport TokenExpiredPage from \"./components/TokenExpiredPage\";\nimport Footer from \"./components/Layout/Footer\";\n\nconst jwtToken = localStorage.jwtToken; // local storage remains even if we refresh the page but the jwttoken goes away from redux store.\n\nif (jwtToken) {\n  setJWTToken(jwtToken); // every time an action that reloads or makes an API the token goes away from the state\n  //that's why we are setting the jwt token until it is available in the local storage. So every time we load anything\n  //from App.js using the routes all we are doing is get the token from local storage and set it. So that we don't lose the state\n  //wheneve we have a valid user\n\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    // passing the decoded token to the redux store\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    // we need to check in frontend if the token is expired\n    //handle logout\n    store.dispatch(logout());\n    window.location.href = \"/tokenExpired\";\n    //window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n\n          <Switch>\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/tokenExpired\" component={TokenExpiredPage} />\n            {\n              //Private Routes\n            }\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n            <Route component={ErrorComponent} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}